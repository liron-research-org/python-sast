{"errors": [{"code": 3, "level": "warn", "message": "Syntax error at line public/js/jquery.js:3:\n `01*` was unexpected", "path": "public/js/jquery.js", "spans": [{"end": {"col": 30648, "line": 3}, "file": "public/js/jquery.js", "start": {"col": 30645, "line": 3}}, {"end": {"col": 30673, "line": 3}, "file": "public/js/jquery.js", "start": {"col": 30670, "line": 3}}], "type": "Syntax error"}], "paths": {"scanned": ["app.js", "bin/www", "config.js", "dummy.js", "model/auth.js", "model/init_db.js", "model/products.js", "public/js/bootstrap.js", "public/js/freewall.js", "public/js/jquery.js", "routes/login.js", "routes/login_check.js", "routes/products.js"], "skipped": [{"path": "public/js/bootstrap.min.js", "reason": "semgrepignore_patterns_match"}, {"path": "public/js/jquery.js", "reason": "analysis_failed_parser_or_internal_error"}]}, "results": [{"check_id": "Users.lironbiam.Documents.Jit.jit-semgrep-control.semgrep-configurations.ymls.javascript.express_open_redirect", "end": {"col": 12, "line": 40, "offset": 1079}, "extra": {"engine_kind": "OSS", "fingerprint": "5f1ae54360173b83d7ba6479940e7b1665c471c9225619f35b8e6b007854666d105d067aa2d7d603a62c4cd55936f6a53c87e0298dac058c3fbedfbb1dcfa707_0", "is_ignored": false, "lines": "    var returnurl = req.body.returnurl;\n\n    logger.error(\"Tried to login attempt from user = \" + user);\n\n    auth(user, password)\n        .then(function (data) {\n            req.session.logged = true;\n            req.session.user_name = user;\n\n            if (returnurl == undefined || returnurl == \"\"){\n                returnurl = \"/\";\n            }\n\n            res.redirect(returnurl);\n        })\n        .catch(function (err) {\n            res.redirect(\"/login?returnurl=\" + returnurl + \"&error=\" + err.message);\n        });", "message": "Untrusted user input in redirect() can result in Open Redirect vulnerability.", "metadata": {"cwe": "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "owasp": "A01:2017 - Injection", "vulnerability_class": ["Open Redirect"]}, "metavars": {"$APP": {"abstract_content": "router", "end": {"col": 7, "line": 19, "offset": 435}, "propagated_value": {"svalue_abstract_content": "express.Router()", "svalue_end": {"col": 30, "line": 5, "offset": 158}, "svalue_start": {"col": 14, "line": 5, "offset": 142}}, "start": {"col": 1, "line": 19, "offset": 429}}, "$FOO": {"abstract_content": "returnurl", "end": {"col": 39, "line": 23, "offset": 588}, "start": {"col": 30, "line": 23, "offset": 579}}, "$INP": {"abstract_content": "returnurl", "end": {"col": 18, "line": 23, "offset": 567}, "start": {"col": 9, "line": 23, "offset": 558}}, "$METHOD": {"abstract_content": "post", "end": {"col": 12, "line": 19, "offset": 440}, "start": {"col": 8, "line": 19, "offset": 436}}, "$QUERY": {"abstract_content": "body", "end": {"col": 29, "line": 23, "offset": 578}, "start": {"col": 25, "line": 23, "offset": 574}}, "$REQ": {"abstract_content": "req", "end": {"col": 24, "line": 23, "offset": 573}, "start": {"col": 21, "line": 23, "offset": 570}}, "$RES": {"abstract_content": "res", "end": {"col": 45, "line": 19, "offset": 473}, "start": {"col": 42, "line": 19, "offset": 470}}, "$X": {"abstract_content": "res", "end": {"col": 16, "line": 36, "offset": 918}, "start": {"col": 13, "line": 36, "offset": 915}}}, "severity": "ERROR"}, "path": "routes/login.js", "start": {"col": 5, "line": 23, "offset": 554}}, {"check_id": "Users.lironbiam.Documents.Jit.jit-semgrep-control.semgrep-configurations.ymls.javascript.express_open_redirect", "end": {"col": 52, "line": 6, "offset": 165}, "extra": {"engine_kind": "OSS", "fingerprint": "d5f37806c81609fc6a008f88a66a0637c36dfd3185e5ccc436820aae3eb262fd4081eeecfaa5da2cc1d161ddcb862f03d448690720d785865639f0fb6cf2ceec_0", "is_ignored": false, "lines": "        res.redirect(\"/login?returnurl=\" + req.url);", "message": "Untrusted user input in redirect() can result in Open Redirect vulnerability.", "metadata": {"cwe": "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "owasp": "A01:2017 - Injection", "vulnerability_class": ["Open Redirect"]}, "metavars": {"$FUNC": {"abstract_content": "check_logged", "end": {"col": 22, "line": 2, "offset": 22}, "start": {"col": 10, "line": 2, "offset": 10}}, "$QUERY": {"abstract_content": "url", "end": {"col": 51, "line": 6, "offset": 164}, "start": {"col": 48, "line": 6, "offset": 161}}, "$REQ": {"abstract_content": "req", "end": {"col": 47, "line": 6, "offset": 160}, "start": {"col": 44, "line": 6, "offset": 157}}, "$RES": {"abstract_content": "res", "end": {"col": 31, "line": 2, "offset": 31}, "start": {"col": 28, "line": 2, "offset": 28}}, "$X": {"abstract_content": "res", "end": {"col": 12, "line": 6, "offset": 125}, "start": {"col": 9, "line": 6, "offset": 122}}}, "severity": "ERROR"}, "path": "routes/login_check.js", "start": {"col": 9, "line": 6, "offset": 122}}, {"check_id": "Users.lironbiam.Documents.Jit.jit-semgrep-control.semgrep-configurations.ymls.rule-non_literal_fs_filename", "end": {"col": 79, "line": 26, "offset": 827}, "extra": {"engine_kind": "OSS", "fingerprint": "b58f554af23d20ee228672b62935c7b862275cdcbd6e97ffa1afba09f6fd4e2b0464113a98cca73885089e47d1fd6b4bbf067314d1b2a4bf6b78713bc740b20b_0", "is_ignored": false, "lines": "var accessLogStream = fs.createWriteStream(path.join(__dirname, 'access.log'))", "message": "The application dynamically constructs file or path information. If the path\ninformation comes from user-supplied input, it could be abused to read sensitive files,\naccess other users' data, or aid in exploitation to gain further system access.\n\nUser input should never be used in constructing paths or files for interacting\nwith the filesystem. This includes filenames supplied by user uploads or downloads.\nIf possible, consider hashing user input or using unique values and\nuse `path.normalize` to resolve and validate the path information\nprior to processing any file functionality.\n\nExample using `path.normalize` and not allowing direct user input:\n```\n// User input, saved only as a reference\n// id is a randomly generated UUID to be used as the filename\nconst userData = {userFilename: userSuppliedFilename, id: crypto.randomUUID()};\n// Restrict all file processing to this directory only\nconst basePath = '/app/restricted/';\n\n// Create the full path, but only use our random generated id as the filename\nconst joinedPath = path.join(basePath, userData.id);\n// Normalize path, removing any '..'\nconst fullPath = path.normalize(joinedPath);\n// Verify the fullPath is contained within our basePath\nif (!fullPath.startsWith(basePath)) {\n    console.log(\"Invalid path specified!\");\n}\n// Process / work with file\n// ...\n```\n\nFor more information on path traversal issues see OWASP:\nhttps://owasp.org/www-community/attacks/Path_Traversal\n", "metadata": {"category": "security", "cwe": "CWE-22", "shortDescription": "Improper limitation of a pathname to a restricted directory ('Path Traversal')"}, "metavars": {"$IMP": {"abstract_content": "\"fs\"", "end": {"col": 22, "line": 6, "offset": 200}, "start": {"col": 18, "line": 6, "offset": 196}}, "$MOD": {"abstract_content": "fs", "end": {"col": 25, "line": 26, "offset": 773}, "start": {"col": 23, "line": 26, "offset": 771}}}, "severity": "WARNING"}, "path": "app.js", "start": {"col": 23, "line": 26, "offset": 771}}], "version": "1.34.1"}